# nginx.conf - Configuration Nginx optimisée pour sssdwnld

# Cache zone pour les réponses API
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=download_limit:10m rate=3r/s;
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# Upstream backend
upstream backend {
    least_conn;
    server app:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Redirection HTTP vers HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name sssdwnld.com www.sssdwnld.com;

    # Certbot challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirection vers HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Configuration HTTPS principale
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sssdwnld.com www.sssdwnld.com;

    # Logs
    access_log /var/log/nginx/sssdwnld_access.log combined buffer=16k;
    error_log /var/log/nginx/sssdwnld_error.log warn;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/sssdwnld.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sssdwnld.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/sssdwnld.com/chain.pem;

    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;
    
    # CSP Header
    set $csp "default-src 'self'; ";
    set $csp "${csp}script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; ";
    set $csp "${csp}style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; ";
    set $csp "${csp}font-src 'self' data: https://fonts.gstatic.com; ";
    set $csp "${csp}img-src 'self' data: https: blob:; ";
    set $csp "${csp}media-src 'self' https: blob:; ";
    set $csp "${csp}connect-src 'self' https://www.google-analytics.com; ";
    set $csp "${csp}frame-ancestors 'none'; ";
    set $csp "${csp}base-uri 'self'; ";
    set $csp "${csp}form-action 'self'";
    add_header Content-Security-Policy $csp always;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Client Configuration
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    send_timeout 30s;

    # API Routes avec cache et rate limiting
    location /api/ {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit 10;

        # Headers de proxy
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Désactiver la mise en buffer pour SSE
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;

        # Cache pour certaines routes
        location ~* ^/api/v1/(health|stats|download/supported)$ {
            proxy_pass http://backend;
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout invalid_header updating;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Route de téléchargement avec limite plus stricte
        location /api/v1/download {
            limit_req zone=download_limit burst=5 nodelay;
            proxy_pass http://backend;
        }
    }

    # Assets statiques avec cache agressif
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|webp|avif)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Fichiers spéciaux
    location = /favicon.ico {
        root /usr/share/nginx/html;
        log_not_found off;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    location = /robots.txt {
        root /usr/share/nginx/html;
        allow all;
        log_not_found off;
        access_log off;
    }

    location = /sitemap.xml {
        root /usr/share/nginx/html;
        allow all;
        log_not_found off;
        access_log off;
    }

    location /.well-known/security.txt {
        root /usr/share/nginx/html;
        allow all;
    }

    # Frontend SPA
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # Cache pour index.html
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }

    # Bloquer l'accès aux fichiers cachés
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Monitoring endpoint (accès interne seulement)
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.20.0.0/16; # Docker network
        deny all;
    }
}