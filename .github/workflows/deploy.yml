# .github/workflows/deploy.yml

name: CI/CD - Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sssdwnld:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Se connecter à Docker Hub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            # Pull la dernière image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sssdwnld:latest
            
            # Arrêter et supprimer l'ancien container s'il existe
            docker stop sssdwnld_container || true
            docker rm sssdwnld_container || true
            
            # Lancer le nouveau container
            docker run -d --restart always \
              -p 3000:3000 \
              --name sssdwnld_container \
              ${{ secrets.DOCKERHUB_USERNAME }}/sssdwnld:latest
              
            # Nettoyer les anciennes images
            docker image prune -f